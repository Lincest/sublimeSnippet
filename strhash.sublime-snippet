<snippet>
    <content><![CDATA[
/*
        字符串哈希
核心思想：将字符串看成P进制数，P的经验值是131或13331，取这两个值的冲突概率低
小技巧：取模的数用2^64，这样直接用unsigned long long存储，溢出的结果就是取模的结果
*/
const int N = 1000010;
typedef unsigned long long ull;
ull p[N], h[N];
ull P = 131;
string s;

void init() {
    p[0] = 1;
    for (int i = 0; i < s.size(); ++i) {
        h[i + 1] = h[i] * P + s[i]; 
        p[i + 1] = p[i] * P;
    }
}

ull get (int l, int r) {
    return h[r] - h[l - 1] * p[r - l + 1];
}


]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>strhash</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.c++</scope>
</snippet>
